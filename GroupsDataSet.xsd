<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="GroupsDataSet" targetNamespace="http://tempuri.org/GroupsDataSet.xsd" xmlns:mstns="http://tempuri.org/GroupsDataSet.xsd" xmlns="http://tempuri.org/GroupsDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="_31П_Проект_ДолгConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="_31П_Проект_ДолгConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.GoodSoft.Properties.Settings.GlobalReference.Default._31П_Проект_ДолгConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupsTableAdapter" GeneratorDataComponentClassName="GroupsTableAdapter" Name="Groups" UserDataComponentName="GroupsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="_31П_Проект_ДолгConnectionString (Settings)" DbObjectName="[31П-Проект-Долг].dbo.Groups" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Groups] WHERE (([Kod_group] = @Original_Kod_group) AND ([Group] = @Original_Group))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Kod_group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Kod_group" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Groups] ([Kod_group], [Group]) VALUES (@Kod_group, @Group);
SELECT Kod_group, [Group] FROM Groups WHERE (Kod_group = @Kod_group)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Kod_group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Kod_group" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Kod_group, [Group] FROM dbo.Groups</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Groups] SET [Kod_group] = @Kod_group, [Group] = @Group WHERE (([Kod_group] = @Original_Kod_group) AND ([Group] = @Original_Group));
SELECT Kod_group, [Group] FROM Groups WHERE (Kod_group = @Kod_group)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Kod_group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Kod_group" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Kod_group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Kod_group" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Kod_group" DataSetColumn="Kod_group" />
              <Mapping SourceColumn="Group" DataSetColumn="Group" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="GroupsDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="GroupsDataSet" msprop:Generator_DataSetName="GroupsDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Groups" msprop:Generator_RowEvHandlerName="GroupsRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupsRowDeleted" msprop:Generator_RowDeletingName="GroupsRowDeleting" msprop:Generator_RowEvArgName="GroupsRowChangeEvent" msprop:Generator_TablePropName="Groups" msprop:Generator_RowChangedName="GroupsRowChanged" msprop:Generator_RowChangingName="GroupsRowChanging" msprop:Generator_TableClassName="GroupsDataTable" msprop:Generator_RowClassName="GroupsRow" msprop:Generator_TableVarName="tableGroups" msprop:Generator_UserTableName="Groups">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Kod_group" msprop:Generator_ColumnPropNameInRow="Kod_group" msprop:Generator_ColumnPropNameInTable="Kod_groupColumn" msprop:Generator_ColumnVarNameInTable="columnKod_group" msprop:Generator_UserColumnName="Kod_group" type="xs:int" />
              <xs:element name="Group" msprop:Generator_ColumnPropNameInRow="Group" msprop:Generator_ColumnPropNameInTable="GroupColumn" msprop:Generator_ColumnVarNameInTable="columnGroup" msprop:Generator_UserColumnName="Group" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Groups" />
      <xs:field xpath="mstns:Kod_group" />
    </xs:unique>
  </xs:element>
</xs:schema>